// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TabContainer /> and <Tab/> renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "justifyContent": "center",
        "position": "relative",
        "width": "100%",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "width": "100%",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        accessibilityLabel="Tab1 tab. 1 of 2. Active"
        accessible={true}
        focusable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderBottomColor": "rgb(51, 73, 91)",
            "borderBottomWidth": 2,
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "opacity": 1,
          }
        }
      >
        <Text
          center={true}
          isSelected={true}
          numberOfLines={1}
          offset={0}
          size={2}
          style={
            Array [
              Object {
                "color": "rgb(51, 73, 91)",
                "fontSize": 16,
                "letterSpacing": 0.2,
                "lineHeight": 20,
              },
              Object {
                "color": "rgb(51, 73, 91)",
                "fontFamily": "Bariol-Regular",
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
                "textAlign": "center",
              },
            ]
          }
        >
          Tab1
        </Text>
      </View>
      <View
        accessibilityHint="double tap to open"
        accessibilityLabel="Tab2 tab. 2 of 2. "
        accessible={true}
        focusable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderBottomColor": "rgb(224, 228, 230)",
            "borderBottomWidth": 1,
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "opacity": 1,
          }
        }
      >
        <Text
          center={true}
          isSelected={false}
          numberOfLines={1}
          offset={0}
          size={2}
          style={
            Array [
              Object {
                "color": "rgb(51, 73, 91)",
                "fontSize": 16,
                "letterSpacing": 0.2,
                "lineHeight": 20,
              },
              Object {
                "color": "rgb(92, 109, 124)",
                "fontFamily": "Bariol-Regular",
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
                "textAlign": "center",
              },
            ]
          }
        >
          Tab2
        </Text>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "height": "100%",
          "width": "100%",
        },
      ]
    }
  >
    <RCTScrollView
      data={
        Array [
          "Tab1",
          "Tab2",
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      getItemLayout={[Function]}
      horizontal={true}
      initalScrollIndex={1}
      initialNumToRender={1}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      pagingEnabled={true}
      renderItem={[Function]}
      scrollEnabled={true}
      scrollEventThrottle={16}
      showsHorizontalScrollIndicator={false}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "alignSelf": "stretch",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                  "width": 320,
                },
              ]
            }
            width={320}
          >
            <View
              style={
                Array [
                  Object {
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "width": 320,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": 20,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TabContainer /> and <Tab/> supports rendering other views 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "height": "100%",
        "justifyContent": "center",
        "position": "relative",
        "width": "100%",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "width": "100%",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        accessibilityLabel="Tab1 tab. 1 of 2. Active"
        accessible={true}
        focusable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderBottomColor": "rgb(51, 73, 91)",
            "borderBottomWidth": 2,
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "opacity": 1,
          }
        }
      >
        <Text
          center={true}
          isSelected={true}
          numberOfLines={1}
          offset={0}
          size={2}
          style={
            Array [
              Object {
                "color": "rgb(51, 73, 91)",
                "fontSize": 16,
                "letterSpacing": 0.2,
                "lineHeight": 20,
              },
              Object {
                "color": "rgb(51, 73, 91)",
                "fontFamily": "Bariol-Regular",
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
                "textAlign": "center",
              },
            ]
          }
        >
          Tab1
        </Text>
      </View>
      <View
        accessibilityHint="double tap to open"
        accessibilityLabel="Tab2 tab. 2 of 2. "
        accessible={true}
        focusable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderBottomColor": "rgb(224, 228, 230)",
            "borderBottomWidth": 1,
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "opacity": 1,
          }
        }
      >
        <Text
          center={true}
          isSelected={false}
          numberOfLines={1}
          offset={0}
          size={2}
          style={
            Array [
              Object {
                "color": "rgb(51, 73, 91)",
                "fontSize": 16,
                "letterSpacing": 0.2,
                "lineHeight": 20,
              },
              Object {
                "color": "rgb(92, 109, 124)",
                "fontFamily": "Bariol-Regular",
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
                "textAlign": "center",
              },
            ]
          }
        >
          Tab2
        </Text>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "height": "100%",
          "width": "100%",
        },
      ]
    }
  >
    <RCTScrollView
      data={
        Array [
          "Tab1",
          "Tab2",
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      getItemLayout={[Function]}
      horizontal={true}
      initalScrollIndex={1}
      initialNumToRender={1}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      pagingEnabled={true}
      renderItem={[Function]}
      scrollEnabled={true}
      scrollEventThrottle={16}
      showsHorizontalScrollIndicator={false}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "alignSelf": "stretch",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                  "width": 320,
                },
              ]
            }
            width={320}
          >
            <View />
          </View>
        </View>
        <View
          style={
            Object {
              "width": 320,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": 20,
          },
        ]
      }
    />
  </View>
</View>
`;
